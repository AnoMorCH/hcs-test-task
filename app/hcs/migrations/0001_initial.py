# Generated by Django 4.2.3 on 2024-07-21 15:06

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Apartment',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('number', models.SmallIntegerField()),
                ('size_m2', models.SmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Building',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('number', models.SmallIntegerField()),
                ('address', models.CharField(max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='BuildingServiceLog',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('month', models.SmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('year', models.SmallIntegerField()),
                ('price', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Tariff',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('WATER', 'Water'), ('COMMUNAL SERVICE', 'Communal Service')], max_length=32)),
                ('unit_price', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='WaterMeter',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('apartment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hcs.apartment')),
            ],
        ),
        migrations.CreateModel(
            name='WaterMeterLog',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('month', models.SmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('year', models.SmallIntegerField()),
                ('consumed', models.SmallIntegerField()),
                ('price', models.IntegerField()),
                ('water_meter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hcs.watermeter')),
            ],
        ),
        migrations.AddConstraint(
            model_name='tariff',
            constraint=models.UniqueConstraint(fields=('type',), name='hcs_tariff_unique'),
        ),
        migrations.AddConstraint(
            model_name='tariff',
            constraint=models.CheckConstraint(check=models.Q(('type__in', ['WATER', 'COMMUNAL SERVICE'])), name='status_valid'),
        ),
        migrations.AddField(
            model_name='buildingservicelog',
            name='apartment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hcs.apartment'),
        ),
        migrations.AddConstraint(
            model_name='building',
            constraint=models.UniqueConstraint(fields=('number', 'address'), name='hcs_building_unique'),
        ),
        migrations.AddField(
            model_name='apartment',
            name='building',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hcs.building'),
        ),
        migrations.AddConstraint(
            model_name='watermeterlog',
            constraint=models.UniqueConstraint(fields=('water_meter_id', 'month', 'year'), name='hcs_watermeterlog_unique'),
        ),
        migrations.AddConstraint(
            model_name='buildingservicelog',
            constraint=models.UniqueConstraint(fields=('apartment_id', 'month', 'year'), name='hcs_buildingservicelog_unique'),
        ),
        migrations.AddConstraint(
            model_name='apartment',
            constraint=models.UniqueConstraint(fields=('number', 'building'), name='hcs_apartment_unique'),
        ),
    ]
